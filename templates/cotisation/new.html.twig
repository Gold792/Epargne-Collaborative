{# templates/cotisation/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Cr√©er une cotisation - Collab√âpargne{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/cotisation.css') }}">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/cotisation.js') }}" defer></script>
{% endblock %}

{% block body %}
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <div class="logo">Collab<span>√âpargne</span></div>
            <div class="user-info">
                <img src="{{ asset('image/profile.png') }}" alt="User" class="user-avatar">
                <div class="user-details">
                    <div class="user-name">{{ app.user.nom }} {{ app.user.prenom }}</div>
                    <div class="user-status">Membre actif</div>
                </div>
            </div>
        </div>
        
        <ul class="sidebar-menu">
            <li class="sidebar-menu-item">
                <a href="{{ path('app_utilisateur') }}">
                    <span class="menu-icon">üè†</span>
                    <span>Tableau de bord</span>
                </a>
            </li>
            <li class="sidebar-menu-item active">
                <a href="{{ path('app_creation_cotisation') }}">
                    <span class="menu-icon">‚ûï</span>
                    <span>Cr√©er une cotisation</span>
                </a>
            </li>
            <li class="sidebar-menu-item">
                <a href="#">
                    <span class="menu-icon">üë•</span>
                    <span>Mes cotisations</span>
                </a>
            </li>
            <li class="sidebar-menu-item">
                <a href="#">
                    <span class="menu-icon">üìä</span>
                    <span>Historique des contributions</span>
                </a>
            </li>
            <li class="sidebar-menu-item">
                <a href="{{ path('app_echeance') }}">
                    <span class="menu-icon">üìÖ</span>
                    <span>√âch√©ances</span>
                </a>
            </li>
        </ul>
        
        <div class="sidebar-footer">
            <div class="sidebar-menu-item">
                <a href="{{ path('app_logout') }}" class="btn btn-danger">
                    <span class="menu-icon">üö™</span>
                    <span>D√©connexion</span>
                </a>
            </div>
        </div>
    </div>
    
    <!-- Main Content -->
    <div class="main-content">
        <div class="header">
            <button class="sidebar-toggle" id="sidebar-toggle">‚â°</button>
            <h1 class="page-title">Cr√©er une cotisation</h1>
            <div class="action-buttons">
                <a href="{{ path('app_utilisateur') }}" class="btn btn-outline">
                    <span class="btn-icon">‚Ü©Ô∏è</span>
                    Retour au tableau de bord
                </a>
            </div>
        </div>
        
        <!-- Mobile Action Buttons -->
        <div class="mobile-actions">
            <a href="{{ path('app_utilisateur') }}" class="btn btn-outline" style="width: 100%; margin-bottom: 1rem;">
                <span class="btn-icon">‚Ü©Ô∏è</span>
                Retour au tableau de bord
            </a>
        </div>
        
        <!-- Form Container -->
        <div class="form-container">
            {{ form_start(form, {'attr': {'class': 'create-form'}}) }}
                <div class="form-section">
                    <h2>Informations g√©n√©rales</h2>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="{{ form.titre.vars.id }}">Titre de la cotisation <span class="required">*</span></label>
                            {{ form_widget(form.titre, {'attr': {'placeholder': 'Ex: Voyage au Maroc, Cadeau d\'anniversaire...'}}) }}
                            {{ form_errors(form.titre) }}
                        </div>
                        
                        <div class="form-group">
                            <label for="{{ form.typeCotisation.vars.id }}">Type de cotisation <span class="required">*</span></label>
                            {{ form_widget(form.typeCotisation) }}
                            {{ form_errors(form.typeCotisation) }}
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="{{ form.description.vars.id }}">Description</label>
                        {{ form_widget(form.description, {'attr': {'rows': '4', 'placeholder': 'D√©crivez l\'objectif de cette cotisation, comment les fonds seront utilis√©s...'}}) }}
                        {{ form_errors(form.description) }}
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="{{ form.montantObjectif.vars.id }}">Montant objectif (FCFA) <span class="required">*</span></label>
                            <div class="input-with-icon">
                                {{ form_widget(form.montantObjectif, {'attr': {'min': '1', 'placeholder': 'Ex: 500000'}}) }}
                                <span class="input-icon">FCFA</span>
                            </div>
                            <small class="form-helper">Montant total √† atteindre pour cette cotisation</small>
                            {{ form_errors(form.montantObjectif) }}
                        </div>
                        
                        <div class="form-group" id="montantEcheanceGroup">
                            <label for="{{ form.montantParEcheance.vars.id }}">Montant par √©ch√©ance (FCFA) <span class="required">*</span></label>
                            <div class="input-with-icon">
                                {{ form_widget(form.montantParEcheance, {'attr': {'min': '1', 'placeholder': 'Ex: 25000'}}) }}
                                <span class="input-icon">FCFA</span>
                            </div>
                            <small class="form-helper">Montant √† verser √† chaque p√©riode</small>
                            {{ form_errors(form.montantParEcheance) }}
                        </div>
                        
                        <div class="form-group" id="montantMinimumGroup" style="display: none;">
                            <label for="{{ form.montantMinimum.vars.id }}">Montant minimum (FCFA) <span class="required">*</span></label>
                            <div class="input-with-icon">
                                {{ form_widget(form.montantMinimum, {'attr': {'min': '1', 'placeholder': 'Ex: 10000'}}) }}
                                <span class="input-icon">FCFA</span>
                            </div>
                            <small class="form-helper">Montant minimum accept√© par contribution</small>
                            {{ form_errors(form.montantMinimum) }}
                        </div>
                    </div>
                </div>
                
                <div class="form-section" id="periodeSection">
                    <h2>P√©riode de cotisation</h2>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="{{ form.dateDebut.vars.id }}">Date de d√©but <span class="required">*</span></label>
                            {{ form_widget(form.dateDebut) }}
                            <small class="form-helper">Date √† laquelle la cotisation commence</small>
                            {{ form_errors(form.dateDebut) }}
                        </div>
                        
                        <div class="form-group">
                            <label for="{{ form.dateFin.vars.id }}">Date de fin</label>
                            <div class="date-fin-container">
                                {{ form_widget(form.dateFin) }}
                                <div class="checkbox">
                                    <input type="checkbox" id="sansDateFin" name="sansDateFin">
                                    <label for="sansDateFin">Pas de date de fin</label>
                                </div>
                            </div>
                            <small class="form-helper">Date √† laquelle la cotisation se termine</small>
                            {{ form_errors(form.dateFin) }}
                        </div>
                    </div>
                    
                    <div class="form-row" id="periodOptions">
                        <div class="form-group">
                            <label for="{{ form.periodicite.vars.id }}">P√©riodicit√© <span class="required">*</span></label>
                            {{ form_widget(form.periodicite) }}
                            <small class="form-helper">√Ä quelle fr√©quence les cotisations sont collect√©es</small>
                            {{ form_errors(form.periodicite) }}
                        </div>
                        
                        <div class="form-group">
                            <label for="{{ form.frequencePeriode.vars.id }}">Fr√©quence de p√©riode <span class="required">*</span></label>
                            {{ form_widget(form.frequencePeriode) }}
                            <small class="form-helper">Nombre de p√©riodes entre chaque collecte</small>
                            {{ form_errors(form.frequencePeriode) }}
                        </div>
                    </div>
                    
                    <div class="form-info" id="frequenceExplication">
                        <div class="info-icon">‚ÑπÔ∏è</div>
                        <div class="info-text">Vous avez s√©lectionn√© une cotisation <strong><span class="frequency-type">mensuelle</span></strong> tous les <strong><span class="frequency-value">1</span> <span class="frequency-unit">mois</span></strong>.</div>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-outline" onclick="location.href='{{ path('app_utilisateur') }}'">Annuler</button>
                    <button type="submit" class="btn btn-primary">
                        <span class="btn-icon">‚úì</span>
                        Cr√©er la cotisation
                    </button>
                </div>
            {{ form_end(form) }}
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialisation de la date du jour pour le champ de date de d√©but
            const dateDebutInput = document.getElementById('{{ form.dateDebut.vars.id }}');
            if (!dateDebutInput.value) {
                const today = new Date();
                const formattedDate = today.toISOString().substr(0, 10);
                dateDebutInput.value = formattedDate;
            }
            
            // Initialisation de la date de fin (par d√©faut: aujourd'hui + 3 mois)
            const dateFinInput = document.getElementById('{{ form.dateFin.vars.id }}');
            if (!dateFinInput.value) {
                const nextMonth = new Date();
                nextMonth.setMonth(nextMonth.getMonth() + 3);
                const formattedNextMonth = nextMonth.toISOString().substr(0, 10);
                dateFinInput.value = formattedNextMonth;
            }
            
            // Gestion du toggle sidebar pour mobile
            document.getElementById('sidebar-toggle').addEventListener('click', function() {
                document.getElementById('sidebar').classList.toggle('active');
            });
            
            // D√©tection mobile pour UI responsive
            function checkMobile() {
                if (window.innerWidth <= 768) {
                    document.querySelector('.mobile-actions').style.display = 'block';
                    document.querySelector('.action-buttons').style.display = 'none';
                } else {
                    document.querySelector('.mobile-actions').style.display = 'none';
                    document.querySelector('.action-buttons').style.display = 'flex';
                }
            }
            
            // V√©rifier au chargement et au redimensionnement
            checkMobile();
            window.addEventListener('resize', checkMobile);
            
            // Gestion du type de cotisation et affichage conditionnel des champs
            const typeCotisationSelect = document.getElementById('{{ form.typeCotisation.vars.id }}');
            const montantEcheanceGroup = document.getElementById('montantEcheanceGroup');
            const montantMinimumGroup = document.getElementById('montantMinimumGroup');
            const periodOptions = document.getElementById('periodOptions');
            const frequenceExplication = document.getElementById('frequenceExplication');
            
            // Fonction pour mettre √† jour l'affichage en fonction du type de cotisation
            function updateCotisationType() {
                const type = typeCotisationSelect.value;
                
                if (type === 'periodique') {
                    montantEcheanceGroup.style.display = 'block';
                    montantMinimumGroup.style.display = 'none';
                    periodOptions.style.display = 'flex';
                    frequenceExplication.style.display = 'flex';
                    document.getElementById('periodeSection').classList.remove('souscription-mode');
                    
                    // Rendre obligatoire le montant par √©ch√©ance
                    document.getElementById('{{ form.montantParEcheance.vars.id }}').required = true;
                    document.getElementById('{{ form.montantMinimum.vars.id }}').required = false;
                } else {
                    montantEcheanceGroup.style.display = 'none';
                    montantMinimumGroup.style.display = 'block';
                    periodOptions.style.display = 'none';
                    frequenceExplication.style.display = 'none';
                    document.getElementById('periodeSection').classList.add('souscription-mode');
                    
                    // Rendre obligatoire le montant minimum
                    document.getElementById('{{ form.montantParEcheance.vars.id }}').required = false;
                    document.getElementById('{{ form.montantMinimum.vars.id }}').required = true;
                }
            }
            
            // Appliquer au chargement et lors des changements
            updateCotisationType();
            typeCotisationSelect.addEventListener('change', updateCotisationType);
            
            // Gestion de la case √† cocher "Pas de date de fin"
            const sansDateFinCheckbox = document.getElementById('sansDateFin');
            let savedDateFinValue = dateFinInput.value; // Pour stocker la valeur temporairement
            
            sansDateFinCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    // Sauvegarder la valeur actuelle avant de d√©sactiver
                    savedDateFinValue = dateFinInput.value;
                    
                    // D√©sactiver le champ
                    dateFinInput.disabled = true;
                    dateFinInput.classList.add('disabled');
                    dateFinInput.value = '';
                    dateFinInput.required = false;
                } else {
                    // R√©activer le champ et restaurer la valeur
                    dateFinInput.disabled = false;
                    dateFinInput.classList.remove('disabled');
                    
                    // Si une valeur √©tait sauvegard√©e, la restaurer
                    if (savedDateFinValue) {
                        dateFinInput.value = savedDateFinValue;
                    } else {
                        // Sinon mettre la date par d√©faut (aujourd'hui + 3 mois)
                        const nextMonth = new Date();
                        nextMonth.setMonth(nextMonth.getMonth() + 3);
                        dateFinInput.value = nextMonth.toISOString().substr(0, 10);
                    }
                }
            });
            
            // Mettre √† jour l'explication de fr√©quence
            function updateFrequenceExplication() {
                const periodicite = document.getElementById('{{ form.periodicite.vars.id }}').value;
                const frequence = document.getElementById('{{ form.frequencePeriode.vars.id }}').value;
                
                let typeText, unitText;
                
                switch(periodicite) {
                    case 'journalier':
                        typeText = 'journali√®re';
                        unitText = frequence > 1 ? 'jours' : 'jour';
                        break;
                    case 'hebdomadaire':
                        typeText = 'hebdomadaire';
                        unitText = frequence > 1 ? 'semaines' : 'semaine';
                        break;
                    case 'mensuel':
                        typeText = 'mensuelle';
                        unitText = frequence > 1 ? 'mois' : 'mois';
                        break;
                    default:
                        typeText = 'personnalis√©e';
                        unitText = 'p√©riode(s)';
                }
                
                document.querySelector('.frequency-type').textContent = typeText;
                document.querySelector('.frequency-value').textContent = frequence;
                document.querySelector('.frequency-unit').textContent = unitText;
            }
            
            // Initialiser l'explication de fr√©quence
            updateFrequenceExplication();
            
            // √âcouter les changements de p√©riodicit√© et de fr√©quence
            document.getElementById('{{ form.periodicite.vars.id }}').addEventListener('change', updateFrequenceExplication);
            document.getElementById('{{ form.frequencePeriode.vars.id }}').addEventListener('change', updateFrequenceExplication);
            
            // Validation de dates (s'assurer que la date de fin est apr√®s la date de d√©but)
            const form = document.querySelector('.create-form');
            form.addEventListener('submit', function(event) {
                // Ne v√©rifier que si la date de fin est activ√©e
                if (!sansDateFinCheckbox.checked && dateFinInput.value) {
                    const dateDebut = new Date(dateDebutInput.value);
                    const dateFin = new Date(dateFinInput.value);
                    
                    if (dateFin <= dateDebut) {
                        event.preventDefault();
                        alert('La date de fin doit √™tre post√©rieure √† la date de d√©but.');
                        dateFinInput.focus();
                    }
                }
            });
        });
    </script>
{% endblock %}